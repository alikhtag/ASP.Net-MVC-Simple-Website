@model CWMIzhanaka.Models.ViewModels.Store.ProductViewModel

@{
    ViewBag.Title = "Product Edit";
}

<h2>Product Edit</h2>

@using (Html.BeginForm("ProductEdit", "Store", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ProductViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ProductId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for=" CategoryFId"> Categories </label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryFId, Model.GetCateg, "Pick a Category ", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryFId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <label class="control-label col-md-2" for=" ImagePath"> Change Image </label>
            <div class="col-md-10">
                <img src="/Images/Uploaded/ProductImages/@Model.ProductId/Thumbnails/@Model.ImagePath" />
                <div class="col-md-10">
                    <input type="file" name="fileIn" id="imgGet" />
                    <img id="imgShow" src="#" />
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Product List", "ProductList")
</div>

@section Scripts {

    <script>
        //Display image
        $(function () {

            function parseURL(input) {

                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $("img#imgShow").attr("src", e.target.result).width(300).height(300);


                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }
            $("#imgGet").change(function () {
                parseURL(this);
            });
        });

    </script>
}
